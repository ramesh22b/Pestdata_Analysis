-- CREATING THE DATA BASE
-- TABLE CREATION
CREATE TABLE PESTDATA
(
OBSERVATIONYEAR INT(10) NOT NULL
);
-- ADDDING THE COLUMNS
ALTER TABLE PESTDATA
ADD COLUMN STANDARDWEEK INT NOT NULL,
ADD COLUMN PESTVALUE INT NOT NULL,
ADD COLUMN COLLECTIONTYPE VARCHAR(20) NOT NULL,
ADD COLUMN MAXT DECIMAL(5,2) NOT NULL,
ADD COLUMN MINT DECIMAL(5,2) NOT NULL,
ADD COLUMN RH1 DECIMAL(5,2) NOT NULL,
ADD COLUMN RH2 DECIMAL(5,2) NOT NULL,
ADD COLUMN RF DECIMAL(5,2) NOT NULL,
ADD COLUMN WS DECIMAL(5,2) NOT NULL,
ADD COLUMN SSH DECIMAL(5,2) NOT NULL,
ADD COLUMN EVP DECIMAL(5,2) NOT NULL,
ADD COLUMN PESTNAME VARCHAR(20) NOT NULL,
ADD COLUMN LOCATION VARCHAR(20) NOT NULL;

-- UPLOADING THE RICE.CSV INTO THE TABLE USING TH TABLE IMPORT DATA WIZARD

-- EXPLORE THE DATA UPLOADED
DESCRIBE PESTDATA;

SELECT COUNT(*) AS NULLCOUNT
FROM pestdata
WHERE PESTVALUE IS NULL
   OR COLLECTIONTYPE IS NULL
   OR MAXT IS NULL
   OR MINT IS NULL
   OR RH1 IS NULL
   OR RH2 IS NULL
   OR RF IS NULL
   OR WS IS NULL
   OR SSH IS NULL
   OR EVP IS NULL
   OR PESTNAME IS NULL
   OR LOCATION IS NULL;
   
-- Making sure to make the values free from Null.

ALTER TABLE PESTDATA 
MODIFY SEASON VARCHAR(20) NOT NULL,
MODIFY TEMP_PEST_INTERACTION FLOAT NOT NULL,
MODIFY TEMPERATURE_DIFFERANCE FLOAT NOT NULL,
MODIFY STATE VARCHAR(20) NOT NULL,
MODIFY TEMP_DIFF FLOAT NOT NULL,
MODIFY HUMIDITY_AVG FLOAT NOT NULL,
MODIFY RAINFALL_PEST_INTERACTION FLOAT NOT NULL;
 

-- CHECK THE ROWS
SELECT COUNT(*) FROM PESTDATA;

-- Using the feature enginenering concept I am updating the weeks to seasons
-- Summer: Weeks 10 to 20 (approximate)
-- Monsoon: Weeks 21 to 36 (approximate)
-- Post-Monsoon: Weeks 37 to 44 (approximate)
-- Winter: Weeks 45 to 9 (wrapping around to the next year)

ALTER TABLE PESTDATA 
ADD COLUMN SEASON VARCHAR(20);
-- added the new column SEASON

UPDATE PESTDATA
SET SEASON = CASE
WHEN STANDARDWEEK BETWEEN 10 AND 20 THEN 'SUMMER'
WHEN STANDARDWEEK BETWEEN 21 AND 36 THEN 'MONSOON'
WHEN STANDARDWEEK BETWEEN 37 AND 44 THEN 'POST-MONSOON'
ELSE 'WINTER'
END;

ALTER table PESTDATA 
ADD COLUMN PESTCOUNT_MAXTEMPERATURE FLOAT;

ALTER TABLE PESTDATA
ADD COLUMN ID INT AUTO_INCREMENT, ADD PRIMARY KEY(ID);

update PESTDATA
set PESTCOUNT_MAXTEMPERATURE = MAXT*PESTVALUE;

ALTER TABLE PESTDATA
RENAME COLUMN PESTCOUNT_MAXTEMPERATURE TO TEMP_PEST_INTERACTION;

ALTER TABLE PESTDATA
ADD COLUMN RAINFALL_PEST_INTERACTION FLOAT;

UPDATE PESTDATA
SET RAINFALL_PEST_INTERACTION = RF*PESTVALUE;
alter table PESTDATA
ADD COLUMN TEMPERATURE_DIFFERANCE FLOAT;

UPDATE PESTDATA
SET TEMPERATURE_DIFFERANCE = MAXT-MINT;

ALTER TABLE PESTDATA
ADD COLUMN STATE VARCHAR(20);


SELECT * FROM PESTDATA.PESTDATA LIMIT 2500;

UPDATE PESTDATA
SET STATE = 'ODISHA' WHERE LOCATION = 'Cuttack';

UPDATE PESTDATA
SET STATE = 'CHHATTISGARH' WHERE LOCATION = 'Raipur';

UPDATE PESTDATA
SET STATE = 'Himachal Pradesh' WHERE LOCATION = 'Palampur';

UPDATE PESTDATA
SET STATE = 'ANDHRA PRADESH' WHERE LOCATION = 'Maruteru';

UPDATE PESTDATA
SET STATE = 'PUNJAB' WHERE LOCATION = 'Ludhiana';

UPDATE PESTDATA
SET STATE = 'MANIPUR' WHERE LOCATION = 'Rajendranagar';


ALTER TABLE PESTDATA
ADD COLUMN TEMP_DIFF FLOAT;

UPDATE PESTDATA
SET TEMP_DIFF = MAXT-MINT;

ALTER TABLE PESTDATA
ADD COLUMN HUMIDITY_AVG FLOAT;

UPDATE PESTDATA
SET HUMIDITY_AVG = (RH1+RH2)/2;

-- searching for the Null values among all columns

SELECT * FROM PESTDATA 
WHERE OBSERVATIONYEAR IS NULL
OR STANDARDWEEK IS NULL
OR PESTVALUE IS NULL
OR COLLECTIONTYPE IS NULL
OR MAXT IS NULL
OR MINT IS NULL
OR RH1 IS NULL
OR RH2 IS NULL
OR RF IS NULL
OR WS IS NULL
OR SSH IS NULL
OR EVP IS NULL
OR PESTNAME IS NULL
OR LOCATION IS NULL
OR TEMP_PEST_INTERACTION IS NULL
OR ID IS NULL
OR TEMPERATURE_DIFFERANCE IS NULL;
-- found zero Null values 


-- Exploratory Data Analysis:
-- Overview of Data

select * FROM PESTDATA  
limit 10;

SELECT COUNT(*) FROM PESTDATA;
-- There are 17636 rows 

SELECT count(distinct(OBSERVATIONYEAR)) FROM PESTDATA;
-- 48 years Data

SELECT distinct(PESTNAME) FROM PESTDATA;

SELECT DISTINCT LOCATION FROM PESTDATA;

SELECT LOCATION, COUNT(PESTNAME) FROM PESTDATA
GROUP BY LOCATION;

select distinct STATE, Observationyear from pestdata;




-- QUESTIONS ON Basic Descriptive Statistics 

-- DESCRIPTION OF THE TABLE

DESCRIBE PESTDATA;

-- WHAT ARE THE Total Number of Records
 SELECT COUNT(*) FROM PESTDATA; 
 
 -- HOW MANY LOCATIONS OR STATE THE DATA IS CONSIDERED
 
SELECT DISTINCT STATE AS STATE_NAME FROM PESTDATA
order by state asc ;

SELECT COUNT(DISTINCT STATE) AS NUMBER_OF_STATE FROM PESTDATA;

-- HOW MANY NUMBERS OF YEARS THE DATA IS CONSIDERED

SELECT COUNT(distinct OBSERVATIONYEAR) FROM PESTDATA;
SELECT MIN(OBSERVATIONYEAR),MAX(OBSERVATIONYEAR) FROM PESTDATA;

--  SEASONS IN THE DATA

SELECT DISTINCT(SEASON) FROM PESTDATA;

-- SUMMARY SATISTISTICS FOR TEMPERATURE WITH EACH STATE

SELECT AVG(MAXT)AS MAXIMUM_TEMPERATUR, AVG(MINT) AS MINIMUM_TEMPERATURE, STATE FROM PESTDATA
GROUP BY STATE;

-- SUMMARY SATISTISTICS FOR PESTVALUE

SELECT AVG(PESTVALUE), STATE FROM PESTDATA
GROUP BY STATE;

-- Questions
-- Distribution of Pest Values Across Different Locations

SELECT distinct LOCATION, AVG(PESTVALUE) AS avg_pestvalue FROM PESTDATA
GROUP BY LOCATION;

-- Relationship Between Temperature and Pest Count

SELECT MAXT, AVG(PESTVALUE) AS avg_pestvalue FROM PESTDATA
GROUP BY MAXT
ORDER BY MAXT; 

-- Pest Count Over SEASON FOR EACH YEAR

SELECT SEASON ,OBSERVATIONYEAR, AVG(PESTVALUE) FROM PESTDATA
GROUP BY SEASON, OBSERVATIONYEAR;

-- Impact of Rainfall on Pest Count
SELECT RF , AVG(PESTVALUE) FROM PESTDATA
WHERE SEASON = 'SUMMER'
GROUP BY RF;

-- Weekly Trends in Temperature and Pest Count
SELECT 
    StandardWeek, 
    AVG(MaxT) AS avg_max_temp, 
    AVG(MinT) AS avg_min_temp, 
    AVG(PestValue) AS avg_pest_value
FROM pestdata
GROUP BY StandardWeek
ORDER BY StandardWeek;

-- Average Humidity Levels During High Pest Count

SELECT 
    AVG(RH1) AS AVG_RH1, 
    AVG(RH2) AS AVG_RH2
FROM pestdata
WHERE PestValue > (SELECT AVG(PestValue) FROM pestdata);

-- How does pest activity change over different weeks of the year?

SELECT 
    StandardWeek, 
    AVG(MaxT) AS avg_max_temp, 
    AVG(MinT) AS avg_min_temp, 
    AVG(RH1) AS avg_rh1, 
    AVG(RH2) AS avg_rh2, 
    AVG(RF) AS avg_rf, 
    AVG(PestValue) AS avg_pest_value
FROM pestdata
GROUP BY StandardWeek
ORDER BY StandardWeek;

-- Identifying the Peak Pest Season
SELECT 
    Season, 
    AVG(PestValue) AS avg_pest_value
FROM pestdata
GROUP BY Season
ORDER BY avg_pest_value DESC;

-- Impact of Weather on Pest Count in Different Locations

SELECT 
    Location, 
    AVG(MaxT) AS avg_max_temp, 
    AVG(MinT) AS avg_min_temp, 
    AVG(RH1) AS avg_rh1, 
    AVG(RH2) AS avg_rh2, 
    AVG(RF) AS avg_rf, 
    AVG(PestValue) AS avg_pest_value
FROM pestdata
GROUP BY Location;

-- Finding out the Pest name with the highest pest value in all States.
SELECT MAX(PESTVALUE), PESTNAME FROM PESTDATA
GROUP BY PESTNAME
ORDER BY MAX(PESTVALUE) DESC;

-- Finding out the Pest name with the highest pest value with each region
SELECT MAX(PESTVALUE), PESTNAME FROM PESTDATA
where location = 'cuttack'
GROUP BY PESTNAME
ORDER BY MAX(PESTVALUE) DESC;

SELECT MAX(PESTVALUE), PESTNAME FROM PESTDATA
WHERE LOCATION = 'Maruteru'
GROUP BY PESTNAME
ORDER BY MAX(PESTVALUE) DESC;

SELECT MAX(PESTVALUE), PESTNAME FROM PESTDATA
WHERE LOCATION = 'Raipur'
GROUP BY PESTNAME
ORDER BY MAX(PESTVALUE) DESC;

SELECT MAX(PESTVALUE), PESTNAME FROM PESTDATA
WHERE LOCATION = 'Palampur'
GROUP BY PESTNAME
ORDER BY MAX(PESTVALUE) DESC;

SELECT MAX(PESTVALUE), PESTNAME FROM PESTDATA
WHERE LOCATION = 'Rajendranagar'
GROUP BY PESTNAME
ORDER BY MAX(PESTVALUE) DESC;

-- Effect of Sunshine Hours on Pest Activity

SELECT 
    SSH, 
    AVG(PestValue) AS avg_pest_value
FROM pestdata
GROUP BY SSH
ORDER BY SSH;

-- Top 5 YEARS with Highest Pest Count

SELECT 
    ObservationYear, 
    SUM(PestValue) AS total_pest_value
FROM pestdata
GROUP BY ObservationYear, StandardWeek
ORDER BY total_pest_value DESC
LIMIT 5;

-- Top 5 LOCATIONS with Highest Pest Count

SELECT 
    LOCATION, 
    OBSERVATIONYEAR,
    SUM(PestValue) AS total_pest_value
FROM pestdata
GROUP BY LOCATION,OBSERVATIONYEAR
ORDER BY total_pest_value DESC
LIMIT 5;











